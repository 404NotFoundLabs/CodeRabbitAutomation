name: Review PRs Scheduler

on:
  schedule:
    - cron: '*/5 * * * *'

jobs:
  trigger-review:
    runs-on: ubuntu-latest
    steps:
      - name: Process Review Queue using Sliding Window
        env:
          GH_PAT: ${{ secrets.GOWREESH_TOKEN }}
          GIST_ID_QUEUE: ${{ secrets.GIST_ID_QUEUE }}
          GIST_ID_REVIEW_HISTORY: ${{ secrets.GIST_ID_REVIEW_HISTORY }}
        run: |
          echo "Fetching queue and review history..."
          curl -s -H "Authorization: token $GH_PAT" https://api.github.com/gists/$GIST_ID_QUEUE > gist_queue.json
          curl -s -H "Authorization: token $GH_PAT" https://api.github.com/gists/$GIST_ID_REVIEW_HISTORY > gist_history.json

          QUEUE=$(jq -r '.files["queue.json"].content' gist_queue.json | jq '.')
          HISTORY=$(jq -r '.files["review-history.json"].content' gist_history.json | jq '.')

          NOW=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          ONE_HOUR_AGO=$(date -u -d "1 hour ago" +"%Y-%m-%dT%H:%M:%SZ")

          RECENT_HISTORY=$(echo "$HISTORY" | jq "[.[] | select(.timestamp >= \"$ONE_HOUR_AGO\")]")
          REVIEWED_COUNT=$(echo "$RECENT_HISTORY" | jq length)

          SLOTS_LEFT=$((4 - REVIEWED_COUNT))
          echo "Slots available: $SLOTS_LEFT"

          if [ "$SLOTS_LEFT" -le 0 ]; then
            echo "Sliding window full. Waiting..."
            exit 0
          fi

          PRS_TO_REVIEW=$(echo "$QUEUE" | jq ".[:$SLOTS_LEFT]")
          REMAINING_QUEUE=$(echo "$QUEUE" | jq ".[$SLOTS_LEFT:]")

          if [ "$(echo "$PRS_TO_REVIEW" | jq length)" -eq 0 ]; then
            echo "No PRs to review."
            exit 0
          fi

          UPDATED_HISTORY="$RECENT_HISTORY"
          for row in $(echo "$PRS_TO_REVIEW" | jq -c '.[]'); do
            PR_NUMBER=$(echo "$row" | jq -r '.pr')
            REPO=$(echo "$row" | jq -r '.repo')

            echo "Posting review to $REPO PR #$PR_NUMBER"
            curl -s -X POST -H "Authorization: token $GH_PAT" \
              -H "Content-Type: application/json" \
              -d '{"body": "@coderabbitai review"}' \
              "https://api.github.com/repos/$REPO/issues/$PR_NUMBER/comments"

            REVIEW_ENTRY=$(jq -n --arg pr "$PR_NUMBER" --arg timestamp "$NOW" '{pr: $pr, timestamp: $timestamp}')
            UPDATED_HISTORY=$(echo "$UPDATED_HISTORY" | jq ". + [ $REVIEW_ENTRY ]")
          done

          echo "$UPDATED_HISTORY" > review-history.json
          curl -s -X PATCH -H "Authorization: token $GH_PAT" \
            -H "Content-Type: application/json" \
            -d "$(jq -n --arg content "$(cat review-history.json | jq -Rs .)" \
              '{files: {"review-history.json": {"content": $content}}}')" \
            https://api.github.com/gists/$GIST_ID_REVIEW_HISTORY

          echo "$REMAINING_QUEUE" > updated-queue.json
          curl -s -X PATCH -H "Authorization: token $GH_PAT" \
            -H "Content-Type: application/json" \
            -d "$(jq -n --arg content "$(cat updated-queue.json | jq -Rs .)" \
              '{files: {"queue.json": {"content": $content}}}')" \
            https://api.github.com/gists/$GIST_ID_QUEUE
